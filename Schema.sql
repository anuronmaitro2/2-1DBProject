--Person 
CREATE TABLE PATIENT(
PATIENT_ID NUMBER CONSTRAINT PK_PATIENT PRIMARY KEY,
DOB DATE,
GENDER VARCHAR2(10),
CONTACT_NO VARCHAR2(11),
DISEASE VARCHAR2(50),
ADDRESS VARCHAR2(100),
FirstName VARCHAR2(20),
LastName VARCHAR2(20)
);


--DOCTOR 
CREATE TABLE DOCTOR(
DoctorId NUMBER CONSTRAINT PK_DOCTOR PRIMARY KEY,
FirstName VARCHAR2(20),
LastName VARCHAR2(20),
CONTACT_NO VARCHAR2(11),
GENDER VARCHAR2(10),
Experience VARCHAR2(50),
Payment NUMBER
);
CREATE TABLE PATIENTPREVIOUSDISEASES (
  PATIENT_ID NUMBER PRIMARY KEY,
  DISEASE VARCHAR2(50),
  CONSTRAINT FK_PREVDISEASE FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT (PATIENT_ID)
);

--DOCTORS SPECIALITY 
CREATE TABLE DOCTORSPECIALITY
(
    DoctorId NUMBER,
    Speciality VARCHAR2(50),
    CONSTRAINT FK_SPECIALITY FOREIGN KEY (DoctorId) REFERENCES DOCTOR(DoctorId),
    CONSTRAINT PK_SPECIALITY PRIMARY KEY (DoctorId, Speciality)
);


--Specialities 

CREATE TABLE ALLSPECIALITY(
SpecialityID NUMBER CONSTRAINT ALLSPECIALITYPK PRIMARY KEY ,
SpecialityName VARCHAR2(50),
Description VARCHAR2(50)
);


--junction table between doctors and speciality 
CREATE TABLE DOCTORSPECIALITYRELATION(
DoctorId NUMBER,
SpecialityID NUMBER,
CONSTRAINT PK_DOCTORSPECIALITYRELATION PRIMARY KEY (DoctorId, SpecialityID),
CONSTRAINT FK_SPECIALITYRELATIONWITHDOCTOR FOREIGN KEY(DoctorId) REFERENCES DOCTOR(DoctorId),
CONSTRAINT FK_SPECIALITYRELATIONWITHSPECIALITY FOREIGN KEY(SpecialityID) REFERENCES ALLSPECIALITY(SpecialityID)
);

--APPOINTMENT

CREATE TABLE APPOINTMENT (
AppointmentID NUMBER CONSTRAINT PK_APPOINTMENT PRIMARY KEY,
Notes VARCHAR2(50),
AppointmentDate DATE,
PatientID NUMBER,
DoctorId NUMBER,
PATIENTDISEASE VARCHAR2(50),
CONSTRAINT FKAPPOINTMENTPATIENT FOREIGN KEY(PatientID) REFERENCES PATIENT(PATIENT_ID),
CONSTRAINT FKAPPOINTMENTDOCTOR FOREIGN KEY(DoctorId) REFERENCES DOCTOR(DoctorId)
);

--PRESCRIPTION
CREATE TABLE PRESCRIPTION(
PrescriptionID NUMBER CONSTRAINT PK_PRESCRIPTION PRIMARY KEY ,
AppointmentID NUMBER,
PRESCRIPTION_STATUS VARCHAR2(20) DEFAULT 'UNPAID',
PRESCRIPTIONDATE  DATE DEFAULT SYSDATE,
CONSTRAINT FK_PRESCRIPTIONAPPOINTMENT FOREIGN KEY(AppointmentID) REFERENCES APPOINTMENT(AppointmentID)

);

--Prescribed advices 
CREATE TABLE PRESCRIBEDADVICE(
PrescribedAdviceID NUMBER CONSTRAINT PK_PRESCRIBEDADVICE PRIMARY KEY,
PrescriptionID NUMBER,
CONSTRAINT FK_PRESCRIBEDADVICEPRESCRIPTION FOREIGN KEY(PrescriptionID) REFERENCES PRESCRIPTION(PrescriptionID)
);


--advices 
CREATE TABLE ADVICES(
AdviceID NUMBER CONSTRAINT PK_ADVICE PRIMARY KEY,
AdviceType VARCHAR2(50),
AdviceText VARCHAR2(500)
);

--relation table between advices and prescribed advices 

CREATE TABLE ADVICEPRESCRIBEDADVICERELATION (
    PrescribedAdviceID NUMBER,
    AdviceID NUMBER,
    CONSTRAINT FK_ADVICERELATION FOREIGN KEY (PrescribedAdviceID) REFERENCES PRESCRIBEDADVICE (PrescribedAdviceID),
    CONSTRAINT FK_ADVICERELATIONALLADVICE FOREIGN KEY (AdviceID) REFERENCES ADVICES (AdviceID),
    CONSTRAINT PK_ADVICEPRESCRIBEDADVICERELATION PRIMARY KEY (PrescribedAdviceID, AdviceID)
);


--Prescribed medicines 

CREATE TABLE PRESCRIBEDMEDICINE(
PrescribedMedicineID NUMBER CONSTRAINT PK_PRESCRIBEDMEDICINE PRIMARY KEY,
PrescriptionID NUMBER ,
HOWTOTAKE VARCHAR2(50),
CONSTRAINT FK_PRESCRIBEDMEDICINEPRESCRIPTION FOREIGN KEY(PrescriptionID) REFERENCES PRESCRIPTION(PrescriptionID)
);



--Medicines 
CREATE TABLE MEDICINES(
MedicineID NUMBER CONSTRAINT PK_ALLMEDICINE PRIMARY KEY, 
MedicineName VARCHAR2(50),
GenericName VARCHAR2(50),
Dosages VARCHAR2(50),
Manufacturer VARCHAR2(50),
SideEffects VARCHAR2(100)
)


--relation table between medicines and prescribed medicines 
CREATE TABLE ALLMEDICINEPRESCRIBERMEDICINERELATION(
PrescribedMedicineID NUMBER,
MedicineID NUMBER,
CONSTRAINT FK_MEDICINERELATION FOREIGN KEY (PrescribedMedicineID) REFERENCES PRESCRIBEDMEDICINE (PrescribedMedicineID),
CONSTRAINT FK_MEDICINERELATIONALLMEDICINE FOREIGN KEY (MedicineID) REFERENCES MEDICINES (MedicineID),
CONSTRAINT PK_ALLMEDICINEPRESCRIBERMEDICINERELATION PRIMARY KEY (PrescribedMedicineID, MedicineID)
);


---Prescribed Lab tests 

CREATE TABLE PRESCRIBEDLABTEST(
PrescribedLabTestID NUMBER CONSTRAINT PK_PRESCRIBEDLABTESR PRIMARY KEY ,
PrescriptionID NUMBER,
CONSTRAINT FK_PRESCRIBEDLABTEST FOREIGN KEY(PrescriptionID) REFERENCES PRESCRIPTION(PrescriptionID)
)

--Lab tests 
CREATE TABLE LABTESTS(
LabTestID NUMBER CONSTRAINT PK_ALLLABTEST PRIMARY KEY,
TestName VARCHAR2(50),
Description VARCHAR2(1000)
);


--relation table between prescribed lab tests and lab tests 

CREATE TABLE PRESCRIBEDLABTESTALLLABTESTRELATION(
LabTestID NUMBER,
PrescribedLabTestID NUMBER,
CONSTRAINT FK_PRESCRIBEDLABTESTRELATION FOREIGN KEY (PrescribedLabTestID) REFERENCES PRESCRIBEDLABTEST (PrescribedLabTestID),
CONSTRAINT FK_ALLLABTESTRELATION FOREIGN KEY (LabTestID) REFERENCES LABTESTS (LabTestID),
CONSTRAINT PK_PRESCRIBEDLABTESTALLLABTESTRELATION PRIMARY KEY (PrescribedLabTestID,LabTestID)
);

--Lab test results 
CREATE TABLE RESULT (
ResultID NUMBER CONSTRAINT PK_RESULT PRIMARY KEY,
PATIENT_ID  NUMBER,
ResultDetails VARCHAR2(50),
ResultDate DATE  DEFAULT SYSDATE,
PRESCRIBEDLABTESTID NUMBER,
LABTESTID NUMBER,
CONSTRAINT FK_RESULTPATIENT FOREIGN KEY(PATIENT_ID) REFERENCES PATIENT(PATIENT_ID),
CONSTRAINT FK_LABTEST FOREIGN KEY(PRESCRIBEDLABTESTID) REFERENCES PRESCRIBEDLABTEST(PRESCRIBEDLABTESTID),
CONSTRAINT FK_LABTESTNAME FOREIGN KEY(LABTESTID) REFERENCES LABTESTS(LABTESTID)
);

--LABBILLs
CREATE TABLE LABBILL(
LABBILLID NUMBER,
PRESCRIPTIONID NUMBER,
LABTESTID NUMBER,
Cost NUMBER,
CONSTRAINT FK_LABBILLPRESCRIPTION  FOREIGN KEY(PRESCRIPTIONID) REFERENCES PRESCRIPTION(PRESCRIPTIONID),
CONSTRAINT FK_LABBILLTEST FOREIGN KEY(LABTESTID) REFERENCES LABTESTS(LABTESTID),
CONSTRAINT PK_LABBILL PRIMARY KEY(LABBILLID)
);

--doctor bills 
CREATE TABLE DOCTORBILL(
DOCTORBILLID NUMBER,
PRESCRIPTIONID NUMBER,
DOCTORCOST NUMBER,
CONSTRAINT PK_DOCTORBILL PRIMARY KEY(DOCTORBILLID),
CONSTRAINT FK_DOCTORPRESCRIPTION FOREIGN KEY(PRESCRIPTIONID) REFERENCES PRESCRIPTION(PRESCRIPTIONID)
);

--bills 
CREATE TABLE BILL(
BILLID NUMBER CONSTRAINT BILL_PK PRIMARY KEY,
ISSUEDATE DATE DEFAULT SYSDATE,
BILLSTATUS VARCHAR2(50) DEFAULT 'NOT PAID',
PRESCRIPTIONID NUMBER,
TOTAL_COST NUMBER,
BILLINGDATE DATE DEFAULT SYSDATE,
CONSTRAINT FK_BILLPRESCRIPTION FOREIGN KEY(PRESCRIPTIONID) REFERENCES PRESCRIPTION(PRESCRIPTIONID)
);
